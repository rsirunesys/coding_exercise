Use camelCase
Try not to use variable names that could be reserved words:  year, month, day
Don't use 'date' as a variable name - too dangerous.  In this case use myDate... or inputDate.
Not sure that Javascript understands 09 as a month... rather just 9
Instead of start and end... use startDate and endDate... then a reader will know exactly what they're looking at
Don't use 'array' as a variable name.  In this case use dateArray.
When you use i++ you're now getting epoch seconds.  Therefore your subsequent while loop will go on forever.
Generally I will not use prototyping... a bit too dangerous.  However, I will make exceptions when I come across some nice code.

        var myDate = new Date(year, month, day); //****************************** bad name do not use date
        var start = new Date(2017,9,1);
        var end = new Date(2017,9,14);
        if (!(start instanceof Date)) {
          console.log("Start Date is not a date");
        }
        if (!(end instanceof Date)){
          console.log("End Date is not a date");
        }
        //now that we have verified the date objects, we can create the date array with a while statement
        var dateArray = [];				//again... bad naming... don't use array as a variable name
        
			Date.prototype.addPropDays = function(days) {
			    var dat = new Date(this.valueOf())
			    dat.setDate(dat.getDate() + days);
			    return dat;
			}

			while (start <= end) {
				dateArray.push( new Date (start) )
				start = start.addPropDays(1);
	   		}        
        
        //we now have an array of all the dates, including the start and end date. we need to now compare the date entered by the user to the array and see if it is included. The easiest way to do that would be to check the first and last value of the array as opposed to checking each individual date in the array. After we do the check, we will want to return the answer as a JSON object.
        
        if (myDate >= dateArray[0] && myDate<=dateArray[dateArray.length-1]) {
        
          //we need to convert the javascript variable to a JSON string, then save it into a JSON pair with the correct answer
          var data = {
            "checkdate": JSON.stringify(myDate),
            "answer": "True"
          }
          console.log(data);
        }
        else {
          var data = {
            "checkdate": JSON.stringify(myDate),
            "answer": "False"
          }
          console.log(data);
        }
      }
